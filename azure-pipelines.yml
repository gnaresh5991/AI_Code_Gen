# Azure Pipeline for building and testing a Spring Boot Maven project
trigger:
  branches:
    include:
      - main  # Replace with the branch you want to trigger the pipeline on

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_OPTS: "-Dmaven.test.failure.ignore=false"  # Set to true if you want to ignore test failures

steps:
  # Step 1: Checkout code
  - checkout: self

  
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean verify'
      options: '-Dmaven.test.failure.ignore=true'  # Continue despite test failures
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '17'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: true
      effectivePomSkip: false
    continueOnError: true  # This ensures the pipeline continues even if the Maven goal fails


  # Step 4: Publish JUnit Test Results
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/target/surefire-reports/TEST-*.xml'
      testRunTitle: 'JUnit Test Results'
    condition: succeededOrFailed()
    displayName: 'Publish JUnit Test Results'

  # Step 5: Publish Build Artifacts (optional)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'target'
      ArtifactName: 'maven-artifacts'
    displayName: 'Publish Build Artifacts'
